{"version":3,"file":"recorderhelper.min.js","sources":["../src/recorderhelper.js"],"sourcesContent":["define(['jquery','core/log','mod_cpassignment/cloudpoodllloader'], function($,log, cloudpoodll) {\n    \"use strict\"; // jshint ;_;\n/*\nThis file is largely to handle recorder specific tasks, configuring it , loading it, its appearance for the ActivityController\nIt should not be concerned with anything non recorder'ish like elements on the page around\nRelationships between the recorder and the surrounding elements should be managed via event handlers in activity controller\n */\n\n    log.debug('cpassignment recorder helper: initialising');\n\n    return{\n\n        status: 'stopped',\n\n        init: function(opts,on_recording_start,\n            on_recording_end,\n            on_audio_processing){\n\n            var that = this;\n\n            cloudpoodll.init(opts['recorderid'],\n\n                function(message){\n                    console.log(message);\n                    switch(message.type){\n                        case 'recording':\n                            if(message.action==='started'){\n                                that.startbuttonclick();\n                                on_recording_start(message);\n\n                            }else if(message.action==='stopped'){\n                                that.stopbuttonclick();\n                                on_recording_end(message);\n                            }\n                            break;\n                        case 'awaitingprocessing':\n                            //awaitingprocessing fires often, but we only want to post once\n                            if(that.status!='posted') {\n                                on_audio_processing(message);\n                            }\n                            that.status='posted';\n                            break;\n                    }\n                }\n            );\n        },\n        stopbuttonclick: function(){\n            var m = this;\n            this.status='stopped';\n            //do something\n        },\n        startbuttonclick: function(){\n            var m = this;\n            this.status='started';\n           //do something\n        }\n\n    };//end of return value\n});"],"names":["define","$","log","cloudpoodll","debug","status","init","opts","on_recording_start","on_recording_end","on_audio_processing","that","this","message","console","type","action","startbuttonclick","stopbuttonclick"],"mappings":"AAAAA,yCAAO,CAAC,SAAS,WAAW,uCAAuC,SAASC,EAAEC,IAAKC,oBAQ/ED,IAAIE,MAAM,8CAEJ,CAEFC,OAAQ,UAERC,KAAM,SAASC,KAAKC,mBAChBC,iBACAC,yBAEIC,KAAOC,KAEXT,YAAYG,KAAKC,KAAI,YAEjB,SAASM,gBACLC,QAAQZ,IAAIW,SACLA,QAAQE,UACN,YACmB,YAAjBF,QAAQG,QACPL,KAAKM,mBACLT,mBAAmBK,UAEG,YAAjBA,QAAQG,SACbL,KAAKO,kBACLT,iBAAiBI,oBAGpB,qBAEe,UAAbF,KAAKN,QACJK,oBAAoBG,SAExBF,KAAKN,OAAO,cAMhCa,gBAAiB,gBAERb,OAAO,WAGhBY,iBAAkB,gBAETZ,OAAO"}