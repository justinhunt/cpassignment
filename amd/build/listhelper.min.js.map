{"version":3,"file":"listhelper.min.js","sources":["../src/listhelper.js"],"sourcesContent":["define(['jquery','core/config','core/log','core/ajax','core/templates','core/modal_factory','core/str','core/modal_events',\n        'mod_cpassignment/cloudpoodllloader','mod_cpassignment/dialogs','mod_cpassignment/datatables','core/notification'],\n    function($,cfg,log,Ajax, templates, ModalFactory, str, ModalEvents, cloudpoodll, dialogs, datatables,notification) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('cpassignment list helper: initialising');\n\n    return {\n        controls: {},\n        modulecssclass: null,\n        cmid: null,\n        moduleid: 0,\n        strings: [],\n        authmode: 'normal',\n        accesskey: '',\n        max: 0,\n\n        init: function(props){\n            this.modulecssclass = props.modulecssclass;\n            this.moduleid = props.moduleid;\n            this.cmid = props.cmid;\n            if(props.hasOwnProperty('authmode')){\n                this.authmode=props.authmode;\n            }\n            if(props.hasOwnProperty('accesskey')){\n                this.accesskey=props.accesskey;\n            }\n            if(props.hasOwnProperty('max')){\n                this.max=props.max;\n            }\n            this.prepare_html();\n            this.register_events();\n            //instantiate the recorders\n            this.init_recorder(this.audiorecid);\n            //cloudpoodll.autoCreateRecorders();\n        },\n\n        init_strings: function(){\n            var that = this;\n           var strings=['deletedialogtitle','deletedialogquestion','deletelabel'];\n           for(var i=0; i<strings.length; i++) {\n               str.get_string(strings[i],'mod_cpassignment').then(function (stringdata) {\n                   that.strings[i]=stringdata;\n               });\n           }\n        },\n\n        prepare_html: function(){\n            this.controls.arecstartbutton = $('#' + this.modulecssclass + '_listaudiorecstart');\n            this.controls.arecstartcontainer = $('.' + this.modulecssclass + '_listaudiorecstartcontainer');\n            this.controls.shareboxbutton = $('#' + this.modulecssclass + '_listshareboxstart');\n            this.controls.shareboxresetkeybutton = $('#' + this.modulecssclass + '_sharebox_resetkey_button');\n            this.controls.sharebox = $('#' + this.modulecssclass + '_sharebox');\n            this.controls.shareboxcopybutton = $('#' + this.modulecssclass + '_sharebox_copy_button');\n            this.controls.receiptscontainer = $('#' + this.modulecssclass + '_receipts_container');\n            this.controls.noitemscontainer = $('#' + this.modulecssclass + '_noitems_cont');\n            this.controls.itemscontainer = $('#' + this.modulecssclass + '_items_cont');\n            this.controls.areccontainer = $('#' + this.modulecssclass + '_arec_container');\n            this.controls.rectable = $('#' + this.modulecssclass + '_itemstable__opts_9999');\n            this.controls.itemnamefield = $('.itemform_itemname');\n            this.controls.itemidfield = $('.itemform_itemid');\n            this.controls.itemfilenamefield =$('.itemform_itemfilename');\n            this.controls.itemsubidfield =$('.itemform_itemsubid');\n            this.controls.dialogdownloadlink=$('#' + this.modulecssclass + '_download_link');\n            this.controls.dialogdownloadbutton=$('#' + this.modulecssclass + '_download_button');\n            this.controls.dialogdownloadname=$('#' + this.modulecssclass + '_download_name');\n            this.controls.downloadlinkcopybutton=$('#' + this.modulecssclass + '_download_copy_button');\n            this.audiorecid = 'therecorderid_mod_cpassignment_listaudiorec';\n            this.controls.deletebutton = $('#' + this.modulecssclass + '_itemstable__opts_9999 a[data-type=\"delete\"]');\n            this.controls.downloadbutton = $('#' + this.modulecssclass + '_itemstable__opts_9999 a[data-type=\"download\"]');\n            this.controls.recordingsexceeded = $('#' + this.modulecssclass + '_recordingsexceeded_cont');\n            this.controls.arecstartbutton.show();\n            this.controls.shareboxbutton.show();\n            this.controls.thedatatable = datatables.getDataTable(this.modulecssclass + '_itemstable__opts_9999');\n\n        },\n\n        register_events: function(){\n            var that =this;\n\n            //recorder dialog show link\n            this.controls.arecstartbutton.click(function(){\n                //clear fields\n                that.controls.itemfilenamefield.val(\"\");\n                that.controls.itemidfield.val(\"\");\n                that.controls.itemnamefield.val(\"\");\n                that.controls.itemsubidfield.val(\"0\");\n                dialogs.openModal('#' + that.modulecssclass + '_arec_container');\n            });\n\n            //sharebox\n            this.controls.shareboxbutton.click(function(){\n                that.show_sharebox();\n            });\n\n            //sharebox\n            this.controls.shareboxresetkeybutton.click(function(){\n                ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: 'Reset the Public Link',\n                    body: 'Resetting the public link will change it and the previous link will no longer work anymore. Are you sure that you want to do this?'\n                })\n                .then(function(modal) {\n                    modal.setSaveButtonText('RESET');\n                    var root = modal.getRoot();\n                    root.on(ModalEvents.save, function() {\n                        that.do_resetkey(that, that.moduleid);\n                    });\n                    modal.show();\n                });\n                return false;\n            });\n\n            this.controls.shareboxcopybutton.click(function(){\n                var copyText = that.controls.sharebox[0];\n                /* Select the text field */\n                copyText.select();\n                copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n                /* Copy the text inside the text field */\n                document.execCommand(\"copy\");\n            });\n\n            this.controls.downloadlinkcopybutton.click(function(){\n                var copyText = that.controls.dialogdownloadlink[0];\n                /* Select the text field */\n                copyText.select();\n                copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n                /* Copy the text inside the text field */\n                document.execCommand(\"copy\");\n            });\n\n            //download links\n            this.controls.rectable.on('click','a[data-type=\"download\"]',function(e){\n                    var clickedLink = $(e.currentTarget);\n                    var elementid = clickedLink.data('id');\n                    that.show_download(that, elementid);\n                    return false;\n            });\n\n            //delete linkc\n            this.controls.rectable.on('click','a[data-type=\"delete\"]',function(e){\n                        var clickedLink = $(e.currentTarget);\n                        var elementid = clickedLink.data('id');\n                        var audiotitle = $('td.itemname span[data-itemid=\"'+ elementid+ '\"]').data('value');\n                        ModalFactory.create({\n                            type: ModalFactory.types.SAVE_CANCEL,\n                            title: 'Delete Media',\n                            body: 'Do you really want to delete audio? <i>' + audiotitle + '</i>',\n                        })\n                            .then(function(modal) {\n                                modal.setSaveButtonText('DELETE');\n                                var root = modal.getRoot();\n                                root.on(ModalEvents.save, function() {\n                                    that.controls.thedatatable.row( clickedLink.parents('tr')).remove().draw();\n                                    var itemcount = that.controls.thedatatable.rows().count();\n                                    if(!itemcount){\n                                        that.controls.noitemscontainer.show();\n                                        that.controls.itemscontainer.hide();\n                                    }\n                                    that.do_delete(elementid);\n                                    that.check_item_count(that);\n                                });\n                                modal.show();\n                            });\n                        return false;\n            });\n        },\n\n        check_item_count: function(that){\n          var itemcount =   that.controls.thedatatable.rows().count();\n          if(that.max > 0 && itemcount >= that.max){\n              that.controls.recordingsexceeded.show();\n              that.controls.arecstartcontainer.addClass('hide');\n          }else{\n              that.controls.recordingsexceeded.hide();\n              that.controls.arecstartcontainer.removeClass('hide');\n          }\n        },\n\n        show_download: function(that, elementid){\n            var audiotitle = $('td.itemname span[data-itemid=\"'+ elementid+ '\"]').data('value');\n            var audiolink = $('td.item audio[data-id=\"'+ elementid+ '\"]').attr('src');\n            that.controls.dialogdownloadlink.val(audiolink);\n            that.controls.dialogdownloadbutton.attr(\"href\",audiolink);\n            that.controls.dialogdownloadname.html('<h3>Download: ' +  audiotitle + '</h3>');\n            dialogs.openModal('#' + that.modulecssclass + '_download_container');\n        },\n\n        show_sharebox: function(){\n            var that =this;\n            dialogs.openModal('#' + that.modulecssclass + '_sharebox_container');\n        },\n\n        do_resetkey: function(that, moduleid){\n\n            Ajax.call([{\n                methodname: 'mod_cpassignment_reset_key',\n                args: {\n                    moduleid: moduleid,\n                },\n                done: function (ajaxresult) {\n                    var payloadobject = JSON.parse(ajaxresult);\n                    if (payloadobject) {\n                        switch(payloadobject.success) {\n                            case true:\n                                var accesskey = payloadobject.message;\n                                that.controls.sharebox.val(cfg.wwwroot + '/mod/cpassignment/k.php?k=' + accesskey);\n                                break;\n\n                            case false:\n                            default:\n                                if (payloadobject.message) {\n                                    log.debug('message: ' + payloadobject.message);\n                                }\n                        }\n                    }\n                },\n                fail: notification.exception\n            }]);\n\n        },\n\n        do_delete: function(itemid){\n\n            Ajax.call([{\n                methodname: 'mod_cpassignment_remove_rec',\n                args: {\n                    itemid: itemid,\n                },\n                done: function (ajaxresult) {\n                    var payloadobject = JSON.parse(ajaxresult);\n                    if (payloadobject) {\n                        switch(payloadobject.success) {\n                            case true:\n                                //all good do nothing\n                                break;\n\n                            case false:\n                            default:\n                                if (payloadobject.message) {\n                                    log.debug('message: ' + payloadobject.message);\n                                }\n                        }\n                    }\n                },\n                fail: notification.exception\n            }]);\n\n        },\n\n        init_recorder: function(recorderid){\n            var that = this;\n            cloudpoodll.init(recorderid,\n\n                function(message){\n                    console.log(message);\n                    switch(message.type){\n                        case 'recording':\n                            break;\n\n                        case 'awaitingprocessing':\n                            //awaitingprocessing fires often, but we only want to post once\n                            if(that.status!='posted') {\n                                //do something\n                            }\n                            that.status='posted';\n                            break;\n\n                        case 'filesubmitted':\n                            that.controls.itemfilenamefield.val(message.mediaurl);\n                            var filename=that.controls.itemfilenamefield.val();\n                            var itemid = that.controls.itemidfield.val();\n                            var itemname = that.controls.itemnamefield.val();\n                            var subid = that.controls.itemsubidfield.val();\n                            that.send_submission(subid,filename,itemid,itemname);\n                            break;\n                    }\n                }\n            );\n        },\n\n        re_init_recorder: function(that,recorderid){\n            var rec_div = $('#' + recorderid);\n            rec_div.empty();\n            rec_div.attr('data-alreadyparsed','false');\n            //the initially applied callback lives, so we just do a blank one here\n            var callback = false;\n            cloudpoodll.init(recorderid,callback);\n        },\n\n        insert_new_item: function(that,item){\n            that.controls.noitemscontainer.hide();\n            that.controls.itemscontainer.show();\n            templates.render('mod_cpassignment/itemrow',item).then(\n                function(html,js){\n                    that.controls.thedatatable.row.add($(html)[0]).draw();\n                }\n            );\n        },\n\n        acknowledge_receipt: function(that,item){\n            that.controls.receiptscontainer.show();\n            templates.render('mod_cpassignment/onereceipt',item).then(\n                function(html,js){\n                    that.controls.receiptscontainer.prepend(html);\n                }\n            );\n        },\n\n        send_submission: function(subid,filename, itemid, itemname ){\n            var that=this;\n            var args = {\n                    subid: subid,\n                    filename: filename,\n                    itemname: itemname,\n                    itemid: itemid,\n                    cmid: that.cmid\n                };\n            if(this.authmode==='guest'){\n                args.accesskey=that.accesskey;\n            }else{\n                args.accesskey='none';\n            }\n\n            Ajax.call([{\n                methodname: 'mod_cpassignment_submit_rec',\n                args: args,\n                done: function (ajaxresult) {\n                    var payloadobject = JSON.parse(ajaxresult);\n                    if (payloadobject) {\n                        switch(payloadobject.success) {\n                            case true:\n                                var item = payloadobject.item;\n                                if(that.authmode==='guest'){\n                                    that.acknowledge_receipt(that,item);\n                                }else{\n                                    that.insert_new_item(that,item);\n                                    that.check_item_count(that);\n                                }\n\n                                dialogs.closeModal('#' + that.modulecssclass + '_arec_container');\n                                that.re_init_recorder(that,that.audiorecid);\n                                break;\n\n                            case false:\n                            default:\n                                if (payloadobject.message) {\n                                    log.debug('message: ' + payloadobject.message);\n                                }\n                                dialogs.closeModal('#' + that.modulecssclass + '_arec_container');\n                                that.clear_recorder();\n                                that.re_init_recorder(that.audiorecid);\n\n                        }\n                    }\n                },\n                fail: notification.exception\n            }]);\n\n        },\n    };//end of return object\n\n});"],"names":["define","$","cfg","log","Ajax","templates","ModalFactory","str","ModalEvents","cloudpoodll","dialogs","datatables","notification","debug","controls","modulecssclass","cmid","moduleid","strings","authmode","accesskey","max","init","props","hasOwnProperty","prepare_html","register_events","init_recorder","this","audiorecid","init_strings","that","i","length","get_string","then","stringdata","arecstartbutton","arecstartcontainer","shareboxbutton","shareboxresetkeybutton","sharebox","shareboxcopybutton","receiptscontainer","noitemscontainer","itemscontainer","areccontainer","rectable","itemnamefield","itemidfield","itemfilenamefield","itemsubidfield","dialogdownloadlink","dialogdownloadbutton","dialogdownloadname","downloadlinkcopybutton","deletebutton","downloadbutton","recordingsexceeded","show","thedatatable","getDataTable","click","val","openModal","show_sharebox","create","type","types","SAVE_CANCEL","title","body","modal","setSaveButtonText","getRoot","on","save","do_resetkey","copyText","select","setSelectionRange","document","execCommand","e","elementid","currentTarget","data","show_download","clickedLink","audiotitle","row","parents","remove","draw","rows","count","hide","do_delete","check_item_count","itemcount","addClass","removeClass","audiolink","attr","html","call","methodname","args","done","ajaxresult","payloadobject","JSON","parse","success","message","wwwroot","fail","exception","itemid","recorderid","console","status","mediaurl","filename","itemname","subid","send_submission","re_init_recorder","rec_div","empty","insert_new_item","item","render","js","add","acknowledge_receipt","prepend","closeModal","clear_recorder"],"mappings":"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"}