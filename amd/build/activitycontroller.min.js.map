{"version":3,"file":"activitycontroller.min.js","sources":["../src/activitycontroller.js"],"sourcesContent":["/* jshint ignore:start */\ndefine(['jquery','jqueryui', 'core/log','mod_cpassignment/recorderhelper','mod_cpassignment/dialogs','core/templates','core/ajax','core/notification'],\n    function($, jqui, log, recorderhelper,dialogs,templates, Ajax, notification) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Activity controller: initialising');\n\n    return {\n\n        cmid: null,\n        activitydata: null,\n        recorderid: null,\n        successmessageid: null,\n        sorryboxid: null,\n        controls: null,\n        moduleclass: null,\n        selectedattempt: 0,\n        graded: false,\n\n        //for making multiple instances\n        clone: function(){\n            return $.extend(true,{},this);\n        },\n\n        //init the activity page js and components\n        init: function(props){\n            var dd = this.clone();\n\n            //pick up opts from html\n            var theid='#amdopts_' + props.widgetid;\n            var configcontrol = $(theid).get(0);\n            if(configcontrol){\n                dd.activitydata = JSON.parse(configcontrol.value);\n                $(theid).remove();\n            }else{\n                //if there is no config we might as well give up\n                log.debug('Read Aloud Test Controller: No config found on page. Giving up.');\n                return;\n            }\n\n            dd.moduleclass = dd.activitydata.moduleclass;\n            dd.cmid = props.cmid;\n            dd.recorderid = dd.activitydata.recorderid;\n            dd.sorryboxid = \"sorryboxid-would-go-here\"//props.widgetid + '_sorrybox';\n            dd.successmessageid = dd.moduleclass  + '_uploadsuccess';\n            dd.startbuttonid = dd.moduleclass  + '_startbutton';\n            dd.selectedattempt = dd.activitydata.selectedattempt;\n            dd.graded = dd.activitydata.graded;\n\n\n            //if the browser doesn't support html5 recording.\n            //then warn and do not go any further\n            if(!dd.is_browser_ok()){\n                $('#' + dd.sorryboxid).show();\n                return;\n            }\n\n            dd.setup_recorder();\n            dd.process_html(dd.activitydata);\n            dd.register_events();\n        },\n\n\n\n        process_html: function(opts){\n\n            var controls ={\n\n                finishedcontainer: $('.' +  opts['finishedcontainer']), //the text showed after finish\n                errorcontainer: $('.' +  opts['errorcontainer']), //any errors\n                recordingcontainer: $('.' +  opts['recordingcontainer']), //the recorder container\n                recordercontainer: $('.' +  opts['recordercontainer']),  //the recorder container\n                instructionscontainer: $('.' +  opts['instructionscontainer']), //the activity instructions container\n                startbuttoncontainer: $('.' +  opts['moduleclass'] + '_startbuttoncontainer'),  //the start button container\n                myattemptscontainer: $('.' +  opts['moduleclass'] + '_myattempts_cont'),  //the attempt data (current submission) container\n                myattemptslabel: $('.' +  opts['moduleclass'] + '_myattempts_caption'),\n                currentfeedbackcontainer: $('.' +  opts['moduleclass'] + '_current_feedback_cont'), // //the feedback container\n                attemptstatuscontainer: $('.' +  opts['moduleclass'] + '_attempt_status_cont'), //the attempt status message containter\n                startbutton: $('#' +  opts['moduleclass'] + '_startbutton'), //the start button\n                selectattemptbutton: $('.' +  opts['moduleclass'] + '_selectattempt') //the select attempt button\n            };\n            this.controls = controls;\n\n            //init attempts table\n            if(!this.graded){\n\n                this.update_attempt_table(this,this.selectedattempt);\n            }\n\n            switch(opts['pagemode']){\n                case 'summary':\n                    this.dosummarylayout();\n                    break;\n                case 'attempt':\n                default:\n\n            }\n        },\n\n\n\n        beginall: function(){\n            var m = this;\n           // m.dorecord();\n            m.passagerecorded = true;\n        },\n\n        is_browser_ok: function(){\n            return (navigator && navigator.mediaDevices\n                && navigator.mediaDevices.getUserMedia);\n        },\n\n        setup_recorder: function(){\n            var dd = this;\n\n            //Set up the callback functions for the audio recorder\n\n            //originates from the recording:started event\n            //See https://api.poodll.com\n            var on_recording_start= function(eventdata){\n                //do something\n            };\n\n            //originates from the recording:ended event\n            //See https://api.poodll.com\n            var on_recording_end= function(eventdata){\n                //do not do anything here\n            };\n\n            //data sent here originates from the awaiting_processing event\n            //See https://api.poodll.com\n           var on_audio_processing= function(eventdata){\n                //at this point we know the submission has been uploaded and we know the fileURL\n               //so we send the submission\n               dd.send_submission(eventdata.mediaurl);\n              //and let the user know that they are all done\n               dd.dofinishedlayout();\n            };\n\n            //init the recorder\n            recorderhelper.init(dd.activitydata,\n                on_recording_start,\n                on_recording_end,\n                on_audio_processing);\n        },\n\n        register_events: function() {\n            var dd = this;\n\t\t\t//events for other controls on the page\n            //ie not recorders\n            dd.controls.startbutton.click(function(){\n                    dd.dorecordinglayout();\n                }\n            );\n\n            dd.controls.selectattemptbutton.click(function(){\n                    dd.select_attempt($(this).attr('data-attemptid'));\n                }\n            );\n        },\n\n        select_attempt: function(attemptid){\n\n\n            Ajax.call([{\n                methodname: 'mod_cpassignment_select_attempt',\n                args: {\n                    cmid: that.cmid,\n                    attemptid: attemptid\n                },\n                done: function (ajaxresult) {\n                    var payloadobject = JSON.parse(ajaxresult);\n                    if (payloadobject) {\n                        switch(payloadobject.success) {\n                            case true:\n                                that.update_attempt_table(that,attemptid);\n                                that.selectedattempt = attemptid;\n                                dialogs.openModal('#' + that.successmessageid);\n                                break;\n\n                            case false:\n                            default:\n                                if (payloadobject.message) {\n                                    log.debug('message: ' + payloadobject.message);\n                                }\n                        }\n                    }\n                },\n                fail: notification.exception\n            }]);\n\n        },\n\n        update_attempt_table: function(that,selectedattemptid){\n            //because of a jquery quirk with data attributes, this selector don't work\n           // that.controls.selectattemptbutton.find(\"[data-attemptid='\" + selectedattemptid  + \"']\").hide();\n            //this works but its not needed any more [can be removed]  we only have one button\n          //  $('.' +  this.moduleclass + '_selectattempt[data-attemptid=' + selectedattemptid + ']').hide();\n\n\n            //need to update selected row's status here ...\n            var submitlabel = M.util.get_string('submitted','mod_cpassignment');\n           $('.mod_cpassignment_cell_attempts_status').text('');\n           var therow = $('.' +  this.moduleclass + '_attemptrow[data-attemptid=' + selectedattemptid + ']');\n           therow.find('.mod_cpassignment_cell_attempts_status').text(submitlabel);\n           //trigger the click event. hate doing this ...\n            therow.trigger(\"click\");\n        },\n\n        insert_new_attempt: function(that,record){\n\n            templates.render('mod_cpassignment/attemptrow',record).then(\n                function(html,js){\n                    that.selectedattempt = record.id;\n                    that.controls.myattemptscontainer.find('tbody').append(html);\n                    that.update_attempt_table(that,record.id);\n\n                }\n            );\n        },\n\n        send_submission: function(filename){\n            var that=this;\n\n            Ajax.call([{\n                methodname: 'mod_cpassignment_submit_attempt',\n                args: {\n                    filename: filename,\n                    cmid: that.cmid\n                },\n                done: function (ajaxresult) {\n                    var payloadobject = JSON.parse(ajaxresult);\n                    if (payloadobject) {\n                        switch(payloadobject.success) {\n                            case true:\n                                var record = {};\n                                record.id=payloadobject.newattempt.id;\n                                record.mediafile=filename;\n                                record.timecreated=payloadobject.newattempt.timecreated;\n                                record.status='';\n                                record.grade_p=0;\n                                that.insert_new_attempt(that,record);\n\n                                dialogs.openModal('#' + that.successmessageid);\n                                break;\n\n                            case false:\n                            default:\n                                if (payloadobject.message) {\n                                    log.debug('message: ' + payloadobject.message);\n                                }\n                        }\n                    }\n                },\n                fail: notification.exception\n            }]);\n\n        },\n\n\n        dorecordinglayout: function(){\n            var m = this;\n            m.controls.instructionscontainer.show();\n            m.controls.startbuttoncontainer.hide();\n            m.controls.myattemptscontainer.hide();\n            m.controls.myattemptslabel.hide();\n            m.controls.attemptstatuscontainer.hide();\n            m.controls.currentfeedbackcontainer.hide();\n            m.controls.recordingcontainer.show();\n        },\n\n\n        dosummarylayout: function(){\n            var m = this;\n            m.controls.instructionscontainer.show();\n            m.controls.recordingcontainer.hide();\n            m.controls.finishedcontainer.hide();\n            m.controls.startbuttoncontainer.show();\n            m.controls.myattemptscontainer.show();\n            m.controls.myattemptslabel.show();\n            m.controls.attemptstatuscontainer.show();\n            m.controls.currentfeedbackcontainer.show()\n\n        },\n\n        dofinishedlayout: function(){\n            var m = this;\n            m.controls.instructionscontainer.hide();\n            m.controls.recordingcontainer.hide();  // don't need any more.\n            m.controls.finishedcontainer.show();\n            m.controls.startbuttoncontainer.hide();\n            m.controls.myattemptscontainer.show();\n            m.controls.myattemptslabel.show();\n            m.controls.attemptstatuscontainer.show();\n            m.controls.currentfeedbackcontainer.hide();\n\n        },\n        doerrorlayout: function(){\n            var m = this;\n            //m.controls.passagecontainer.hide();\n            m.controls.recordingcontainer.hide();\n            m.controls.errorcontainer.show();\n            m.controls.startbuttoncontainer.hide();\n            m.controls.myattemptscontainer.hide();\n            m.controls.myattemptslabel.hide();\n            m.controls.attemptstatuscontainer.hide();\n            m.controls.currentfeedbackcontainer.hide();\n        }\n    };//end of returned object\n});//total end\n"],"names":["define","$","jqui","log","recorderhelper","dialogs","templates","Ajax","notification","debug","cmid","activitydata","recorderid","successmessageid","sorryboxid","controls","moduleclass","selectedattempt","graded","clone","extend","this","init","props","dd","theid","widgetid","configcontrol","get","JSON","parse","value","remove","startbuttonid","is_browser_ok","setup_recorder","process_html","register_events","show","opts","finishedcontainer","errorcontainer","recordingcontainer","recordercontainer","instructionscontainer","startbuttoncontainer","myattemptscontainer","myattemptslabel","currentfeedbackcontainer","attemptstatuscontainer","startbutton","selectattemptbutton","update_attempt_table","dosummarylayout","beginall","passagerecorded","navigator","mediaDevices","getUserMedia","eventdata","send_submission","mediaurl","dofinishedlayout","click","dorecordinglayout","select_attempt","attr","attemptid","call","methodname","args","that","done","ajaxresult","payloadobject","success","openModal","message","fail","exception","selectedattemptid","submitlabel","M","util","get_string","text","therow","find","trigger","insert_new_attempt","record","render","then","html","js","id","append","filename","newattempt","mediafile","timecreated","status","grade_p","m","hide","doerrorlayout"],"mappings":"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"}